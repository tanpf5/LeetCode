

public class Solution {
    public int minDepth(TreeNode root) {
    	if (root == null) return 0;
        if ((root.left == null) && (root.right == null)) return 1;
        else {
        	if (root.left == null) 
        		return minDepth(root.right) + 1;
        	else {
        		if (root.right == null)
        			return minDepth(root.left) + 1;
        		else return Math.min(minDepth(root.left), minDepth(root.right)) + 1;
        	}
        }    	
    }
	
    public int maxDepth(TreeNode root) {
        if (root == null) return 0;
        else return Math.max(maxDepth(root.left), maxDepth(root.right)) + 1;
    }
    
    public boolean isSameTree(TreeNode p, TreeNode q) {
    	if (p == null && q == null) return true;
    	if (p == null || q == null) return false;
        if (p.val != q.val) return false;
        return (isSameTree(p.left, q.left) || isSameTree(p.right, q.right));
        
    }
    
	public static void main(String[] args) {

	}

}
